{"version":3,"sources":["webpack:///./src/components/FAQSection/index.tsx","webpack:///./src/pages/faq.tsx","webpack:///./src/utils/useFAQAccordion.ts"],"names":["FAQSection","title","rawMarkdownBody","pageContext","className","query","buttonCreated","setButtonCreated","toggleChildrenClass","data","useState","element","Array","from","elem","selector","siblings","nextElement","nextElementSibling","matches","push","nextUntil","map","p","classList","toggle","useEffect","hash","window","location","split","anchor","document","getElementById","heading","parentNode","allH3","querySelectorAll","forEach","h3","button","createElement","add","insertBefore","appendChild","toggleClasses","e","target","localName","history","replaceState","getElementsByTagName","id","scrollRestoration","addEventListener","removeEventListener","sections","allMarkdownRemark","edges","node","sort","a","b","frontmatter","position","Layout","i","permalink","key"],"mappings":"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","file":"component---src-pages-faq-tsx-9a8d652b2a1507d264f1.js","sourcesContent":["import React from \"react\"\nimport Marked from \"../Marked\"\n\ninterface Props {\n  title: string\n  rawMarkdownBody: string\n  pageContext: any\n}\n\nconst FAQSection = ({\n  title,\n  rawMarkdownBody,\n  pageContext\n}: Props) => (\n  <section className=\"inner-faq-content\">\n    <h2>{title}</h2>\n    <Marked pageContext={pageContext}>{rawMarkdownBody}</Marked>\n  </section>\n)\n\nexport default FAQSection\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport FAQSection from \"../components/FAQSection\"\nimport { graphql } from \"gatsby\"\nimport { useFAQAccordion } from \"../utils/useFAQAccordion\"\n\nexport default ({ pageContext, data }: any) => {\n  useFAQAccordion()\n\n  const sections = data.allMarkdownRemark.edges\n    .map((e: any) => e.node)\n    .sort((a: any, b: any) => {\n      const aPosition = a.frontmatter.position\n      const bPosition = b.frontmatter.position\n      if (aPosition < bPosition) {\n        return -1\n      }\n      return 1\n    })\n\n  return (\n    <Layout title=\"FAQ | GraphQL\" pageContext={pageContext}>\n    <section>\n      <div className=\"documentationContent\">\n        <section className=\"inner-faq-content\">\n          <h1>Frequently Asked Questions (FAQ)</h1>\n          <div>\n            {sections.map(\n              (\n                {\n                  frontmatter: { title, permalink },\n                  rawMarkdownBody,\n                }: any,\n              i\n            ) => (\n              <FAQSection\n                key={i}\n                title={title}\n                permalink={permalink}\n                rawMarkdownBody={rawMarkdownBody}\n                pageContext={pageContext}\n              />\n            )\n            )}\n          </div>\n        </section>\n      </div>\n    </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query getAllFAQSections {\n    allMarkdownRemark(\n      filter: { frontmatter: { permalink: { regex: \"/faq/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            position\n          }\n          id\n          rawMarkdownBody\n        }\n      }\n    }\n  }\n`\n","import React, { useEffect, useState } from \"react\"\n\nconst nextUntil = (elem: any, selector: string) => {\n  const siblings = []\n  let nextElement = elem.nextElementSibling\n\n  while (nextElement) {\n    if (nextElement.matches(selector)) break\n\n    siblings.push(nextElement)\n\n    nextElement = nextElement.nextElementSibling\n  }\n\n  return siblings\n}\n\nexport const useFAQAccordion = () => {\n  const [buttonCreated, setButtonCreated] = useState(false)\n  const toggleChildrenClass = (element: React.ReactNode) => {\n    Array.from(nextUntil(element, \"button\")).map(p =>\n      p.classList.toggle(\"show\")\n    )\n  }\n\n  useEffect(() => {\n    const hash = window.location.hash ? window.location.hash.split(\"#\")[1] : \"\"\n\n    if (hash && buttonCreated) {\n      const anchor = document && document.getElementById(hash)\n      const heading: any = anchor && anchor.parentNode\n\n      if (heading) {\n        heading.parentNode.classList.toggle(\"open\")\n        heading.classList.toggle(\"open\")\n        toggleChildrenClass(heading.parentNode)\n      }\n    }\n  }, [buttonCreated])\n\n  useEffect(() => {\n    const allH3 = document.querySelectorAll(\"h3\")\n\n    Array.from(allH3).forEach(h3 => {\n      const button = document.createElement(\"button\")\n      button.classList.add(\"faq-button-question\")\n      h3.parentNode?.insertBefore(button, h3)\n      button.appendChild(h3)\n      setButtonCreated(true)\n    })\n  }, [])\n\n  useEffect(() => {\n    const toggleClasses = (e: any) => {\n      if (e.target.localName !== \"button\" && e.target.localName !== \"h3\") return\n\n      const element =\n        e.target.localName === \"button\" ? e.target : e.target.parentNode\n\n    \n      window.history.replaceState(\n        {},\n        \"\",\n        \"#\" + e.target.getElementsByTagName(\"a\")[0].id\n      )\n      window.history.scrollRestoration = \"manual\"\n\n      if (e.target.localName === \"button\") {\n        e.target.classList.toggle(\"open\")\n        e.target.getElementsByTagName(\"h3\")[0].classList.toggle(\"open\")\n      } else {\n        e.target.classList.toggle(\"open\")\n        e.target.parentNode.classList.toggle(\"open\")\n      }\n\n      toggleChildrenClass(element)\n    }\n\n    document.addEventListener(\"click\", toggleClasses)\n\n    return () => document.removeEventListener(\"click\", toggleClasses)\n  }, [typeof window !== 'undefined' ? window.location.hash : null])\n}"],"sourceRoot":""}